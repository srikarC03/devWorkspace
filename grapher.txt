# Name: Srikar Chandaluri
# Date: 12/13/19
# Purpose: To Create a Program that does things.

import math
import turtle

def gridSystem(x,y):	
	bot = turtle.Turtle()
	system = turtle.Turtle()
	bot.speed(10)
	system.speed(10)
	bot.penup()
	system.penup()
	bot.hideturtle()
	system.hideturtle()
	bot.setposition(0,0)
	system.setposition(0,0)
	bot.pendown()
	system.left(90)
	system.pendown()
	system.forward(200)
	system.penup()
	system.setposition(0,0)
	system.pendown()
	system.right(180)
	system.forward(200)
	system.penup()
	system.setposition(0,0)
	system.pendown()
	system.left(90)
	system.forward(200)
	system.penup()
	system.setposition(0,0)
	system.pendown()
	system.left(180)
	system.forward(200)
	system.penup()
	system.setposition(0,0)
	system.pendown()
	system.right(90)
	bot.left(90)
	xAxis = 200/x
	for n in range( 0 , int(xAxis) ):
		xIncrement = 0 - ( n * x)
		nIncrement = 0 + ( n * x)
		system.penup()
		bot.penup()
		system.setposition( xIncrement , -3 )
		bot.setposition( nIncrement , -3)
		system.pendown()
		bot.pendown()
		system.forward(6)
		bot.forward(6)
	yAxis = 200/y
	system.right(90)
	bot.right(90)
	for z in range( 0 , int(yAxis) ):
		yIncrement = 0 - ( z * y )
		zIncrement = 0 + ( z * y )
		bot.penup()
		system.penup()
		bot.setposition( -3 , zIncrement )
		system.setposition( -3 , yIncrement )
		bot.pendown()
		system.pendown()
		bot.forward(6)
		system.forward(6)

def functionCall(choice):
	if( choice == "Linear"):
		lFunction = turtle.Turtle()
		lFunction.speed(100)
		lFunction.hideturtle()
		lFunction.penup()
		lFunction.color("blue")
		m = float(input("Enter the m coefficient for the linear function"))
		b = float(input("Enter the b coefficient for the linear function"))
		for x in range( -200 , 200 ):
			linear = ( m * x ) + ( b )
			lFunction.setposition( x , linear )
			lFunction.pendown()
	elif( choice == "Quadratic" ):
		qFunction = turtle.Turtle()
		qFunction.speed(100) 
		qFunction.hideturtle()
		qFunction.penup()
		qFunction.color("green")
		a = float(input("Enter a coefficient for the equation"))
		b = float(input("Enter b coefficient for the equation"))
		c = float(input("Enter c coefficient for the equation"))
		for x in range( -200 , 200 , ):
			quadratic = ( a * x * x ) + ( b * x ) + ( c )
			qFunction.setposition( x , quadratic )
			qFunction.pendown()
	elif( choice == "Cubic" ):
		cFunction = turtle.Turtle()
		cFunction.speed(100)
		cFunction.hideturtle()
		cFunction.penup()
		cFunction.color("red")
		a = float(input("Enter a coefficient for the equation"))
		b = float(input("Enter b coefficient for the equation"))
		c = float(input("Enter c coefficient for the equation"))
		d = float(input("Enter d coefficient for the equation"))
		for x in range( -200 , 200 , ):
			cubic = ( a * x * x * x ) + ( b * x * x ) + ( c * x ) + ( d )
			cFunction.setposition( x , cubic )
			cFunction.pendown()
	elif( choice == "Exponential" ):
		eFunction = turtle.Turtle()
		eFunction.speed(100)
		eFunction.hideturtle()
		eFunction.penup()
		eFunction.color("orange")
		a = float(input("Enter the coefficent of the exponential equation of a*(b^x)"))
		b = float(input("Enter the coefficent of the exponential equation of a*(b^x)"))
		exponential = a * ( pow( b , x ) )
		for x in range( -200 , 200 , ):
			exponential = a * ( pow( b , x ) )
			eFunction.setposition( x , exponential )
			eFunction.pendown()
	else:
		print("Please type exactly from the Menu")
def main():
	
	x = float(input("Please enter the increment for the x axis as a positive number"))
	y = float(input("Please enter the increment for the y axis as a positive number"))
	gridSystem(x,y)
	print("Function Menu")
	print("1. Linear ")
	print("2. Quadratic")
	print("3. Cubic")
	print("4. Exponential")
	choice = input("Enter the function you want")
	functionCall(choice)
	
main()
 